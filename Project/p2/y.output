Useless nonterminals

   forward_declaration
   animation_parameter
   if_block
   if_statement
   for_statement
   print_statement
   exit_statement
   assign_statement_or_empty


Terminals which are not used

   "error"
   "string"
   "forward"
   "if"
   "for"
   "else"
   "exit"
   "print"
   "space"
   "uparrow"
   "downarrow"
   "leftmouse_down"
   "middlemouse_down"
   "rightmouse_down"
   "leftmouse_up"
   "middlemouse_up"
   "rightmouse_up"
   "mouse_move"
   "mouse_drag"
   "f1"
   "akey"
   "skey"
   "dkey"
   "fkey"
   "hkey"
   "jkey"
   "kkey"
   "lkey"
   "wkey"
   "zkey"
   "sin"
   "cos"
   "tan"
   "asin"
   "acos"
   "atan"
   "sqrt"
   "abs"
   "floor"
   "random"
   "*"
   "/"
   "%"
   "<"
   ">"
   "<="
   ">="
   "=="
   "!="
   "!"
   "&&"
   "||"
   UNARY_OP


Useless rules

   79 forward_declaration: /* empty */

   80 animation_parameter: object_type "identifier"

   81 if_block: statement_block_creator statement end_of_statement_block
   82         | statement_block

   83 if_statement: "if" "(" expression ")" if_block
   84             | "if" "(" expression ")" if_block "else" if_block

   85 for_statement: "for" "(" statement_block_creator assign_statement_or_empty end_of_statement_block ";" expression ";" statement_block_creator assign_statement_or_empty end_of_statement_block ")" statement_block

   86 print_statement: "print" "(" expression ")"

   87 exit_statement: "exit" "(" expression ")"

   88 assign_statement_or_empty: assign_statement
   89                          | empty


Rules never reduced

   42 statement: /* empty */

   77 math_operator: /* empty */


State 32 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 67 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 71 conflicts: 1 shift/reduce
State 72 conflicts: 1 shift/reduce
State 73 conflicts: 1 shift/reduce
State 74 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 76 conflicts: 1 shift/reduce
State 77 conflicts: 1 shift/reduce
State 78 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce
State 80 conflicts: 1 shift/reduce
State 81 conflicts: 1 shift/reduce
State 82 conflicts: 1 shift/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 86 conflicts: 1 shift/reduce
State 90 conflicts: 2 shift/reduce
State 125 conflicts: 1 shift/reduce
State 126 conflicts: 1 shift/reduce
State 127 conflicts: 1 shift/reduce
State 135 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: declaration_list block_list

    2 declaration_list: declaration_list declaration
    3                 | empty

    4 declaration: variable_declaration ";"
    5            | object_declaration ";"

    6 variable_declaration: simple_type "identifier" optional_initializer
    7                     | simple_type "identifier" "[" expression "]"

    8 simple_type: "int"
    9            | "double"

   10 optional_initializer: "=" expression
   11                     | empty

   12 object_declaration: object_type "identifier" "(" parameter_list_or_empty ")"
   13                   | object_type "identifier" "[" expression "]"

   14 object_type: "triangle"
   15            | "pixmap"
   16            | "circle"
   17            | "rectangle"
   18            | "textbox"

   19 parameter_list_or_empty: parameter_list
   20                        | empty

   21 parameter_list: parameter_list "," parameter
   22               | parameter

   23 parameter: "identifier" "=" expression

   24 block_list: block_list block
   25           | empty

   26 block: initialization_block
   27      | termination_block
   28      | animation_block
   29      | on_block

   30 initialization_block: "initialization" statement_block

   31 termination_block: "termination" statement_block

   32 animation_block: "animation" "identifier" "(" check_animation_parameter ")" "{" statement_list "}" end_of_statement_block

   33 check_animation_parameter: object_type "identifier"

   34 on_block: "on" keystroke statement_block

   35 keystroke: "leftarrow"
   36          | "rightarrow"

   37 statement_block: "{" statement_block_creator statement_list "}" end_of_statement_block

   38 statement_block_creator: /* empty */

   39 end_of_statement_block: /* empty */

   40 statement_list: statement_list statement
   41               | empty

   42 statement: /* empty */
   43          | assign_statement ";"

   44 assign_statement: variable "=" expression
   45                 | variable "+=" expression
   46                 | variable "-=" expression
   47                 | variable "++"
   48                 | variable "--"

   49 variable: "identifier"
   50         | "identifier" "[" expression "]"
   51         | "identifier" "." "identifier"
   52         | "identifier" "[" expression "]" "." "identifier"

   53 expression: primary_expression
   54           | expression T_OR expression
   55           | expression T_AND expression
   56           | expression T_LESS_EQUAL expression
   57           | expression T_GREATER_EQUAL expression
   58           | expression T_LESS expression
   59           | expression T_GREATER expression
   60           | expression T_EQUAL expression
   61           | expression T_NOT_EQUAL expression
   62           | expression "+" expression
   63           | expression "-" expression
   64           | expression T_MULTIPLY expression
   65           | expression T_DIVIDE expression
   66           | expression T_MOD expression
   67           | math_operator "(" expression ")"
   68           | expression "near" expression
   69           | expression "touches" expression

   70 primary_expression: "(" expression ")"
   71                   | variable
   72                   | "int constant"
   73                   | "true"
   74                   | "false"
   75                   | "double constant"
   76                   | "string constant"

   77 math_operator: /* empty */

   78 empty: /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
"error" (258)
"int" (259) 8
"double" (260) 9
"string" (261)
"triangle" (262) 14
"pixmap" (263) 15
"circle" (264) 16
"rectangle" (265) 17
"textbox" (266) 18
"forward" (267)
"initialization" (268) 30
"termination" (269) 31
"on" (270) 34
"animation" (271) 32
"if" (272)
"for" (273)
"else" (274)
"exit" (275)
"print" (276)
"true" (277) 73
"false" (278) 74
"space" (279)
"leftarrow" (280) 35
"rightarrow" (281) 36
"uparrow" (282)
"downarrow" (283)
"leftmouse_down" (284)
"middlemouse_down" (285)
"rightmouse_down" (286)
"leftmouse_up" (287)
"middlemouse_up" (288)
"rightmouse_up" (289)
"mouse_move" (290)
"mouse_drag" (291)
"f1" (292)
"akey" (293)
"skey" (294)
"dkey" (295)
"fkey" (296)
"hkey" (297)
"jkey" (298)
"kkey" (299)
"lkey" (300)
"wkey" (301)
"zkey" (302)
"(" (303) 12 32 67 70
")" (304) 12 32 67 70
"{" (305) 32 37
"}" (306) 32 37
"[" (307) 7 13 50 52
"]" (308) 7 13 50 52
";" (309) 4 5 43
"," (310) 21
"." (311) 51 52
"=" (312) 10 23 44
"+=" (313) 45
"-=" (314) 46
"++" (315) 47
"--" (316) 48
"sin" (317)
"cos" (318)
"tan" (319)
"asin" (320)
"acos" (321)
"atan" (322)
"sqrt" (323)
"abs" (324)
"floor" (325)
"random" (326)
"touches" (327) 69
"near" (328) 68
"*" (329)
"/" (330)
"+" (331) 62
"-" (332) 63
"%" (333)
"<" (334)
">" (335)
"<=" (336)
">=" (337)
"==" (338)
"!=" (339)
"!" (340)
"&&" (341)
"||" (342)
"int constant" (343) 72
"double constant" (344) 75
"string constant" (345) 76
"identifier" (346) 6 7 12 13 23 32 33 49 50 51 52
IF_NO_ELSE (347)
T_OR (348) 54
T_AND (349) 55
T_NOT_EQUAL (350) 61
T_EQUAL (351) 60
T_GREATER_EQUAL (352) 57
T_LESS_EQUAL (353) 56
T_GREATER (354) 59
T_LESS (355) 58
T_MOD (356) 66
T_DIVIDE (357) 65
T_MULTIPLY (358) 64
UNARY_OP (359)


Nonterminals, with rules where they appear

$accept (105)
    on left: 0
program (106)
    on left: 1, on right: 0
declaration_list (107)
    on left: 2 3, on right: 1 2
declaration (108)
    on left: 4 5, on right: 2
variable_declaration (109)
    on left: 6 7, on right: 4
simple_type (110)
    on left: 8 9, on right: 6 7
optional_initializer (111)
    on left: 10 11, on right: 6
object_declaration (112)
    on left: 12 13, on right: 5
object_type (113)
    on left: 14 15 16 17 18, on right: 12 13 33
parameter_list_or_empty (114)
    on left: 19 20, on right: 12
parameter_list (115)
    on left: 21 22, on right: 19 21
parameter (116)
    on left: 23, on right: 21 22
block_list (117)
    on left: 24 25, on right: 1 24
block (118)
    on left: 26 27 28 29, on right: 24
initialization_block (119)
    on left: 30, on right: 26
termination_block (120)
    on left: 31, on right: 27
animation_block (121)
    on left: 32, on right: 28
check_animation_parameter (122)
    on left: 33, on right: 32
on_block (123)
    on left: 34, on right: 29
keystroke (124)
    on left: 35 36, on right: 34
statement_block (125)
    on left: 37, on right: 30 31 34
statement_block_creator (126)
    on left: 38, on right: 37
end_of_statement_block (127)
    on left: 39, on right: 32 37
statement_list (128)
    on left: 40 41, on right: 32 37 40
statement (129)
    on left: 42 43, on right: 40
assign_statement (130)
    on left: 44 45 46 47 48, on right: 43
variable (131)
    on left: 49 50 51 52, on right: 44 45 46 47 48 71
expression (132)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69,
    on right: 7 10 13 23 44 45 46 50 52 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70
primary_expression (133)
    on left: 70 71 72 73 74 75 76, on right: 53
math_operator (134)
    on left: 77, on right: 67
empty (135)
    on left: 78, on right: 3 11 20 25 41


state 0

    0 $accept: . program $end

    $default  reduce using rule 78 (empty)

    program           go to state 1
    declaration_list  go to state 2
    empty             go to state 3


state 1

    0 $accept: program . $end

    $end  shift, and go to state 4


state 2

    1 program: declaration_list . block_list
    2 declaration_list: declaration_list . declaration

    "int"        shift, and go to state 5
    "double"     shift, and go to state 6
    "triangle"   shift, and go to state 7
    "pixmap"     shift, and go to state 8
    "circle"     shift, and go to state 9
    "rectangle"  shift, and go to state 10
    "textbox"    shift, and go to state 11

    $default  reduce using rule 78 (empty)

    declaration           go to state 12
    variable_declaration  go to state 13
    simple_type           go to state 14
    object_declaration    go to state 15
    object_type           go to state 16
    block_list            go to state 17
    empty                 go to state 18


state 3

    3 declaration_list: empty .

    $default  reduce using rule 3 (declaration_list)


state 4

    0 $accept: program $end .

    $default  accept


state 5

    8 simple_type: "int" .

    $default  reduce using rule 8 (simple_type)


state 6

    9 simple_type: "double" .

    $default  reduce using rule 9 (simple_type)


state 7

   14 object_type: "triangle" .

    $default  reduce using rule 14 (object_type)


state 8

   15 object_type: "pixmap" .

    $default  reduce using rule 15 (object_type)


state 9

   16 object_type: "circle" .

    $default  reduce using rule 16 (object_type)


state 10

   17 object_type: "rectangle" .

    $default  reduce using rule 17 (object_type)


state 11

   18 object_type: "textbox" .

    $default  reduce using rule 18 (object_type)


state 12

    2 declaration_list: declaration_list declaration .

    $default  reduce using rule 2 (declaration_list)


state 13

    4 declaration: variable_declaration . ";"

    ";"  shift, and go to state 19


state 14

    6 variable_declaration: simple_type . "identifier" optional_initializer
    7                     | simple_type . "identifier" "[" expression "]"

    "identifier"  shift, and go to state 20


state 15

    5 declaration: object_declaration . ";"

    ";"  shift, and go to state 21


state 16

   12 object_declaration: object_type . "identifier" "(" parameter_list_or_empty ")"
   13                   | object_type . "identifier" "[" expression "]"

    "identifier"  shift, and go to state 22


state 17

    1 program: declaration_list block_list .
   24 block_list: block_list . block

    "initialization"  shift, and go to state 23
    "termination"     shift, and go to state 24
    "on"              shift, and go to state 25
    "animation"       shift, and go to state 26

    $default  reduce using rule 1 (program)

    block                 go to state 27
    initialization_block  go to state 28
    termination_block     go to state 29
    animation_block       go to state 30
    on_block              go to state 31


state 18

   25 block_list: empty .

    $default  reduce using rule 25 (block_list)


state 19

    4 declaration: variable_declaration ";" .

    $default  reduce using rule 4 (declaration)


state 20

    6 variable_declaration: simple_type "identifier" . optional_initializer
    7                     | simple_type "identifier" . "[" expression "]"

    "["  shift, and go to state 32
    "="  shift, and go to state 33

    $default  reduce using rule 78 (empty)

    optional_initializer  go to state 34
    empty                 go to state 35


state 21

    5 declaration: object_declaration ";" .

    $default  reduce using rule 5 (declaration)


state 22

   12 object_declaration: object_type "identifier" . "(" parameter_list_or_empty ")"
   13                   | object_type "identifier" . "[" expression "]"

    "("  shift, and go to state 36
    "["  shift, and go to state 37


state 23

   30 initialization_block: "initialization" . statement_block

    "{"  shift, and go to state 38

    statement_block  go to state 39


state 24

   31 termination_block: "termination" . statement_block

    "{"  shift, and go to state 38

    statement_block  go to state 40


state 25

   34 on_block: "on" . keystroke statement_block

    "leftarrow"   shift, and go to state 41
    "rightarrow"  shift, and go to state 42

    keystroke  go to state 43


state 26

   32 animation_block: "animation" . "identifier" "(" check_animation_parameter ")" "{" statement_list "}" end_of_statement_block

    "identifier"  shift, and go to state 44


state 27

   24 block_list: block_list block .

    $default  reduce using rule 24 (block_list)


state 28

   26 block: initialization_block .

    $default  reduce using rule 26 (block)


state 29

   27 block: termination_block .

    $default  reduce using rule 27 (block)


state 30

   28 block: animation_block .

    $default  reduce using rule 28 (block)


state 31

   29 block: on_block .

    $default  reduce using rule 29 (block)


state 32

    7 variable_declaration: simple_type "identifier" "[" . expression "]"

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 53
    primary_expression  go to state 54
    math_operator       go to state 55


state 33

   10 optional_initializer: "=" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 56
    primary_expression  go to state 54
    math_operator       go to state 55


state 34

    6 variable_declaration: simple_type "identifier" optional_initializer .

    $default  reduce using rule 6 (variable_declaration)


state 35

   11 optional_initializer: empty .

    $default  reduce using rule 11 (optional_initializer)


state 36

   12 object_declaration: object_type "identifier" "(" . parameter_list_or_empty ")"

    "identifier"  shift, and go to state 57

    $default  reduce using rule 78 (empty)

    parameter_list_or_empty  go to state 58
    parameter_list           go to state 59
    parameter                go to state 60
    empty                    go to state 61


state 37

   13 object_declaration: object_type "identifier" "[" . expression "]"

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 62
    primary_expression  go to state 54
    math_operator       go to state 55


state 38

   37 statement_block: "{" . statement_block_creator statement_list "}" end_of_statement_block

    $default  reduce using rule 38 (statement_block_creator)

    statement_block_creator  go to state 63


state 39

   30 initialization_block: "initialization" statement_block .

    $default  reduce using rule 30 (initialization_block)


state 40

   31 termination_block: "termination" statement_block .

    $default  reduce using rule 31 (termination_block)


state 41

   35 keystroke: "leftarrow" .

    $default  reduce using rule 35 (keystroke)


state 42

   36 keystroke: "rightarrow" .

    $default  reduce using rule 36 (keystroke)


state 43

   34 on_block: "on" keystroke . statement_block

    "{"  shift, and go to state 38

    statement_block  go to state 64


state 44

   32 animation_block: "animation" "identifier" . "(" check_animation_parameter ")" "{" statement_list "}" end_of_statement_block

    "("  shift, and go to state 65


state 45

   73 primary_expression: "true" .

    $default  reduce using rule 73 (primary_expression)


state 46

   74 primary_expression: "false" .

    $default  reduce using rule 74 (primary_expression)


state 47

   70 primary_expression: "(" . expression ")"

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 66
    primary_expression  go to state 54
    math_operator       go to state 55


state 48

   72 primary_expression: "int constant" .

    $default  reduce using rule 72 (primary_expression)


state 49

   75 primary_expression: "double constant" .

    $default  reduce using rule 75 (primary_expression)


state 50

   76 primary_expression: "string constant" .

    $default  reduce using rule 76 (primary_expression)


state 51

   49 variable: "identifier" .
   50         | "identifier" . "[" expression "]"
   51         | "identifier" . "." "identifier"
   52         | "identifier" . "[" expression "]" "." "identifier"

    "["  shift, and go to state 67
    "."  shift, and go to state 68

    $default  reduce using rule 49 (variable)


state 52

   71 primary_expression: variable .

    $default  reduce using rule 71 (primary_expression)


state 53

    7 variable_declaration: simple_type "identifier" "[" expression . "]"
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "]"              shift, and go to state 69
    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84


state 54

   53 expression: primary_expression .

    $default  reduce using rule 53 (expression)


state 55

   67 expression: math_operator . "(" expression ")"

    "("  shift, and go to state 85


state 56

   10 optional_initializer: "=" expression .
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 10 (optional_initializer)


state 57

   23 parameter: "identifier" . "=" expression

    "="  shift, and go to state 86


state 58

   12 object_declaration: object_type "identifier" "(" parameter_list_or_empty . ")"

    ")"  shift, and go to state 87


state 59

   19 parameter_list_or_empty: parameter_list .
   21 parameter_list: parameter_list . "," parameter

    ","  shift, and go to state 88

    $default  reduce using rule 19 (parameter_list_or_empty)


state 60

   22 parameter_list: parameter .

    $default  reduce using rule 22 (parameter_list)


state 61

   20 parameter_list_or_empty: empty .

    $default  reduce using rule 20 (parameter_list_or_empty)


state 62

   13 object_declaration: object_type "identifier" "[" expression . "]"
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "]"              shift, and go to state 89
    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84


state 63

   37 statement_block: "{" statement_block_creator . statement_list "}" end_of_statement_block

    $default  reduce using rule 78 (empty)

    statement_list  go to state 90
    empty           go to state 91


state 64

   34 on_block: "on" keystroke statement_block .

    $default  reduce using rule 34 (on_block)


state 65

   32 animation_block: "animation" "identifier" "(" . check_animation_parameter ")" "{" statement_list "}" end_of_statement_block

    "triangle"   shift, and go to state 7
    "pixmap"     shift, and go to state 8
    "circle"     shift, and go to state 9
    "rectangle"  shift, and go to state 10
    "textbox"    shift, and go to state 11

    object_type                go to state 92
    check_animation_parameter  go to state 93


state 66

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression
   70 primary_expression: "(" expression . ")"

    ")"              shift, and go to state 94
    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84


state 67

   50 variable: "identifier" "[" . expression "]"
   52         | "identifier" "[" . expression "]" "." "identifier"

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 95
    primary_expression  go to state 54
    math_operator       go to state 55


state 68

   51 variable: "identifier" "." . "identifier"

    "identifier"  shift, and go to state 96


state 69

    7 variable_declaration: simple_type "identifier" "[" expression "]" .

    $default  reduce using rule 7 (variable_declaration)


state 70

   69 expression: expression "touches" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 97
    primary_expression  go to state 54
    math_operator       go to state 55


state 71

   68 expression: expression "near" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 98
    primary_expression  go to state 54
    math_operator       go to state 55


state 72

   62 expression: expression "+" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 99
    primary_expression  go to state 54
    math_operator       go to state 55


state 73

   63 expression: expression "-" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 100
    primary_expression  go to state 54
    math_operator       go to state 55


state 74

   54 expression: expression T_OR . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 101
    primary_expression  go to state 54
    math_operator       go to state 55


state 75

   55 expression: expression T_AND . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 102
    primary_expression  go to state 54
    math_operator       go to state 55


state 76

   61 expression: expression T_NOT_EQUAL . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 103
    primary_expression  go to state 54
    math_operator       go to state 55


state 77

   60 expression: expression T_EQUAL . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 104
    primary_expression  go to state 54
    math_operator       go to state 55


state 78

   57 expression: expression T_GREATER_EQUAL . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 105
    primary_expression  go to state 54
    math_operator       go to state 55


state 79

   56 expression: expression T_LESS_EQUAL . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 106
    primary_expression  go to state 54
    math_operator       go to state 55


state 80

   59 expression: expression T_GREATER . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 107
    primary_expression  go to state 54
    math_operator       go to state 55


state 81

   58 expression: expression T_LESS . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 108
    primary_expression  go to state 54
    math_operator       go to state 55


state 82

   66 expression: expression T_MOD . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 109
    primary_expression  go to state 54
    math_operator       go to state 55


state 83

   65 expression: expression T_DIVIDE . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 110
    primary_expression  go to state 54
    math_operator       go to state 55


state 84

   64 expression: expression T_MULTIPLY . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 111
    primary_expression  go to state 54
    math_operator       go to state 55


state 85

   67 expression: math_operator "(" . expression ")"

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 112
    primary_expression  go to state 54
    math_operator       go to state 55


state 86

   23 parameter: "identifier" "=" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 113
    primary_expression  go to state 54
    math_operator       go to state 55


state 87

   12 object_declaration: object_type "identifier" "(" parameter_list_or_empty ")" .

    $default  reduce using rule 12 (object_declaration)


state 88

   21 parameter_list: parameter_list "," . parameter

    "identifier"  shift, and go to state 57

    parameter  go to state 114


state 89

   13 object_declaration: object_type "identifier" "[" expression "]" .

    $default  reduce using rule 13 (object_declaration)


state 90

   37 statement_block: "{" statement_block_creator statement_list . "}" end_of_statement_block
   40 statement_list: statement_list . statement

    "}"           shift, and go to state 115
    "identifier"  shift, and go to state 51

    "}"           [reduce using rule 42 (statement)]
    "identifier"  [reduce using rule 42 (statement)]

    statement         go to state 116
    assign_statement  go to state 117
    variable          go to state 118


state 91

   41 statement_list: empty .

    $default  reduce using rule 41 (statement_list)


state 92

   33 check_animation_parameter: object_type . "identifier"

    "identifier"  shift, and go to state 119


state 93

   32 animation_block: "animation" "identifier" "(" check_animation_parameter . ")" "{" statement_list "}" end_of_statement_block

    ")"  shift, and go to state 120


state 94

   70 primary_expression: "(" expression ")" .

    $default  reduce using rule 70 (primary_expression)


state 95

   50 variable: "identifier" "[" expression . "]"
   52         | "identifier" "[" expression . "]" "." "identifier"
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "]"              shift, and go to state 121
    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84


state 96

   51 variable: "identifier" "." "identifier" .

    $default  reduce using rule 51 (variable)


state 97

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression
   69           | expression "touches" expression .

    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 69 (expression)


state 98

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   68           | expression "near" expression .
   69           | expression . "touches" expression

    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 68 (expression)


state 99

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   62           | expression "+" expression .
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    T_MOD       shift, and go to state 82
    T_DIVIDE    shift, and go to state 83
    T_MULTIPLY  shift, and go to state 84

    $default  reduce using rule 62 (expression)


state 100

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   63           | expression "-" expression .
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    T_MOD       shift, and go to state 82
    T_DIVIDE    shift, and go to state 83
    T_MULTIPLY  shift, and go to state 84

    $default  reduce using rule 63 (expression)


state 101

   54 expression: expression . T_OR expression
   54           | expression T_OR expression .
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 54 (expression)


state 102

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   55           | expression T_AND expression .
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 55 (expression)


state 103

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   61           | expression T_NOT_EQUAL expression .
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 61 (expression)


state 104

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   60           | expression T_EQUAL expression .
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 60 (expression)


state 105

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   57           | expression T_GREATER_EQUAL expression .
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"         shift, and go to state 72
    "-"         shift, and go to state 73
    T_MOD       shift, and go to state 82
    T_DIVIDE    shift, and go to state 83
    T_MULTIPLY  shift, and go to state 84

    $default  reduce using rule 57 (expression)


state 106

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   56           | expression T_LESS_EQUAL expression .
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"         shift, and go to state 72
    "-"         shift, and go to state 73
    T_MOD       shift, and go to state 82
    T_DIVIDE    shift, and go to state 83
    T_MULTIPLY  shift, and go to state 84

    $default  reduce using rule 56 (expression)


state 107

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   59           | expression T_GREATER expression .
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"         shift, and go to state 72
    "-"         shift, and go to state 73
    T_MOD       shift, and go to state 82
    T_DIVIDE    shift, and go to state 83
    T_MULTIPLY  shift, and go to state 84

    $default  reduce using rule 59 (expression)


state 108

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   58           | expression T_LESS expression .
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "+"         shift, and go to state 72
    "-"         shift, and go to state 73
    T_MOD       shift, and go to state 82
    T_DIVIDE    shift, and go to state 83
    T_MULTIPLY  shift, and go to state 84

    $default  reduce using rule 58 (expression)


state 109

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   66           | expression T_MOD expression .
   68           | expression . "near" expression
   69           | expression . "touches" expression

    $default  reduce using rule 66 (expression)


state 110

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   65           | expression T_DIVIDE expression .
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    $default  reduce using rule 65 (expression)


state 111

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   64           | expression T_MULTIPLY expression .
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    $default  reduce using rule 64 (expression)


state 112

   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   67           | math_operator "(" expression . ")"
   68           | expression . "near" expression
   69           | expression . "touches" expression

    ")"              shift, and go to state 122
    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84


state 113

   23 parameter: "identifier" "=" expression .
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 23 (parameter)


state 114

   21 parameter_list: parameter_list "," parameter .

    $default  reduce using rule 21 (parameter_list)


state 115

   37 statement_block: "{" statement_block_creator statement_list "}" . end_of_statement_block

    $default  reduce using rule 39 (end_of_statement_block)

    end_of_statement_block  go to state 123


state 116

   40 statement_list: statement_list statement .

    $default  reduce using rule 40 (statement_list)


state 117

   43 statement: assign_statement . ";"

    ";"  shift, and go to state 124


state 118

   44 assign_statement: variable . "=" expression
   45                 | variable . "+=" expression
   46                 | variable . "-=" expression
   47                 | variable . "++"
   48                 | variable . "--"

    "="   shift, and go to state 125
    "+="  shift, and go to state 126
    "-="  shift, and go to state 127
    "++"  shift, and go to state 128
    "--"  shift, and go to state 129


state 119

   33 check_animation_parameter: object_type "identifier" .

    $default  reduce using rule 33 (check_animation_parameter)


state 120

   32 animation_block: "animation" "identifier" "(" check_animation_parameter ")" . "{" statement_list "}" end_of_statement_block

    "{"  shift, and go to state 130


state 121

   50 variable: "identifier" "[" expression "]" .
   52         | "identifier" "[" expression "]" . "." "identifier"

    "."  shift, and go to state 131

    $default  reduce using rule 50 (variable)


state 122

   67 expression: math_operator "(" expression ")" .

    $default  reduce using rule 67 (expression)


state 123

   37 statement_block: "{" statement_block_creator statement_list "}" end_of_statement_block .

    $default  reduce using rule 37 (statement_block)


state 124

   43 statement: assign_statement ";" .

    $default  reduce using rule 43 (statement)


state 125

   44 assign_statement: variable "=" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 132
    primary_expression  go to state 54
    math_operator       go to state 55


state 126

   45 assign_statement: variable "+=" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 133
    primary_expression  go to state 54
    math_operator       go to state 55


state 127

   46 assign_statement: variable "-=" . expression

    "true"             shift, and go to state 45
    "false"            shift, and go to state 46
    "("                shift, and go to state 47
    "int constant"     shift, and go to state 48
    "double constant"  shift, and go to state 49
    "string constant"  shift, and go to state 50
    "identifier"       shift, and go to state 51

    "("  [reduce using rule 77 (math_operator)]

    variable            go to state 52
    expression          go to state 134
    primary_expression  go to state 54
    math_operator       go to state 55


state 128

   47 assign_statement: variable "++" .

    $default  reduce using rule 47 (assign_statement)


state 129

   48 assign_statement: variable "--" .

    $default  reduce using rule 48 (assign_statement)


state 130

   32 animation_block: "animation" "identifier" "(" check_animation_parameter ")" "{" . statement_list "}" end_of_statement_block

    $default  reduce using rule 78 (empty)

    statement_list  go to state 135
    empty           go to state 91


state 131

   52 variable: "identifier" "[" expression "]" "." . "identifier"

    "identifier"  shift, and go to state 136


state 132

   44 assign_statement: variable "=" expression .
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 44 (assign_statement)


state 133

   45 assign_statement: variable "+=" expression .
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 45 (assign_statement)


state 134

   46 assign_statement: variable "-=" expression .
   54 expression: expression . T_OR expression
   55           | expression . T_AND expression
   56           | expression . T_LESS_EQUAL expression
   57           | expression . T_GREATER_EQUAL expression
   58           | expression . T_LESS expression
   59           | expression . T_GREATER expression
   60           | expression . T_EQUAL expression
   61           | expression . T_NOT_EQUAL expression
   62           | expression . "+" expression
   63           | expression . "-" expression
   64           | expression . T_MULTIPLY expression
   65           | expression . T_DIVIDE expression
   66           | expression . T_MOD expression
   68           | expression . "near" expression
   69           | expression . "touches" expression

    "touches"        shift, and go to state 70
    "near"           shift, and go to state 71
    "+"              shift, and go to state 72
    "-"              shift, and go to state 73
    T_OR             shift, and go to state 74
    T_AND            shift, and go to state 75
    T_NOT_EQUAL      shift, and go to state 76
    T_EQUAL          shift, and go to state 77
    T_GREATER_EQUAL  shift, and go to state 78
    T_LESS_EQUAL     shift, and go to state 79
    T_GREATER        shift, and go to state 80
    T_LESS           shift, and go to state 81
    T_MOD            shift, and go to state 82
    T_DIVIDE         shift, and go to state 83
    T_MULTIPLY       shift, and go to state 84

    $default  reduce using rule 46 (assign_statement)


state 135

   32 animation_block: "animation" "identifier" "(" check_animation_parameter ")" "{" statement_list . "}" end_of_statement_block
   40 statement_list: statement_list . statement

    "}"           shift, and go to state 137
    "identifier"  shift, and go to state 51

    "}"           [reduce using rule 42 (statement)]
    "identifier"  [reduce using rule 42 (statement)]

    statement         go to state 116
    assign_statement  go to state 117
    variable          go to state 118


state 136

   52 variable: "identifier" "[" expression "]" "." "identifier" .

    $default  reduce using rule 52 (variable)


state 137

   32 animation_block: "animation" "identifier" "(" check_animation_parameter ")" "{" statement_list "}" . end_of_statement_block

    $default  reduce using rule 39 (end_of_statement_block)

    end_of_statement_block  go to state 138


state 138

   32 animation_block: "animation" "identifier" "(" check_animation_parameter ")" "{" statement_list "}" end_of_statement_block .

    $default  reduce using rule 32 (animation_block)
